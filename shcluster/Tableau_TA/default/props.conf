# Suggested extraction name scheme
# 1. If the field exists in nativeAPI JSon, use that title without schema
# 2. Recycle existing extraction names (http_status_code etc)
# 3. PascalCase is the suggested type for new extraction names

[source::*]
REPORT-procname2 = processname
REPORT-base_path = base_directory
REPORT-base_filename = base_filename

[log4j]
EXTRACT-JobEnqueueArgs = args\[\[(?P<jobenqueueargs>[^\]]+)
EXTRACT-arguments = args="\[(?P<jobarguments>[^\]]+)
EXTRACT-RequestCompleted = Request Completed: (?P<requesttype>[^ ]+) with status (?P<http_status_code>\d\d\d)
EXTRACT-log4Meta = \((?P<log4meta>[^)]+)
EXTRACT-JavaSeverity = (?<sev>(INFO|WARN(ING)?|ERROR|DEBUG\d?|TRACE|FATAL|NOTICE|LOG|PANIC))
EXTRACT-prepflowname = flowName[\"\',=\: ]{0,3}(?<prepFlowName>[^\"\',]*)

[apache:access]
EXTRACT-VizSession = bootstrapSession/sessions/(?P<VizSession>[0-9A-F]{32}-\d+:\d+)
EXTRACT-sess = .*(?P<sess>[0-9A-F]{32}-\d+:\d+)
EXTRACT-http_status_code = ^(?:[^"]*"){6} (?P<http_status_code>\d{3})
EXTRACT-request_id = ^(?:[^"\n]*"){8}\s+\d+\s+(?P<RequestID>[^\s]+)
EXTRACT-req = ^(?:[^"\n]*"){8}\s+\d+\s+(?P<req>[^\s]+)
EXTRACT-ResponseTime = ^(?:[^"\n]*"){8}\s+(?P<ResponseTime>\d+)
EXTRACT-ApacheWorkbook = /w/(?P<wb>[^/]*)
EXTRACT-ApacheView = /v/(?P<view>[^/]*)
EXTRACT-URL = ^(?:[^"\n]*"){2}\s+\d+\s+"(?P<Method>\w+)\s(?P<URL>[^\s]+)

[source::(?::){0}*\\tabproto*]
EXTRACT-ProtoSess = client-session-id":"(?P<sess>[^"]+)

[source::(?::){0}*logs[^_]dataserver_]
EXTRACT-DSJavaReq = ^(?:[^,\n]*,){3}(?P<req>[^,\)]*),
EXTRACT-DSJavaSess = ^(?:[^,\n]*,){2}(?P<sess>[^,\)]*),

[source::(?::){0}*logs[^_]vizqlserver]
EXTRACT-VQLJavaSess = ^(?:[^,\n]*,){2}(?P<sess>[^,\)]*),

[source::(?::){0}*logs[^_]backgrounder*]
EXTRACT-BGJobID = ^(?:[^,\n]*,){4}(?P<BGJobID>\d+)
EXTRACT-BGJobType = ^(?:[^,\n]*,){5}:(?P<BGJobType>[^,\)]*+)
EXTRACT-BGJobOutcome = Job finished: (?P<BGJobOutcome>[^;]*)
EXTRACT-BGSessID = ^(?:[^,\n]*,){3}(?P<sess>[^,]*),

[source::(?::){0}*logs[^_]vizqlserver_*]
EXTRACT-VQLJavaReq = ^(?:[^,\n]*,){3}(?P<req>[^,\)]*),

[source::(?::){0}*logs[^_]nativeapi_tabadmincontroller*]
EXTRACT-LicenseStateMsg = GetLicenseState\(\): (?P<LicenseStateMsg>[^"]+)
EXTRACT-FulfillmentID = FulfillmentId=("?)(?P<FulfillmentID>[^" ,]+)
EXTRACT-CheckoutCode = lc_checkout return information: (?P<CheckoutCode>[^\\]+)

[source::(?::){0}*\\vizportal*]
EXTRACT-VizPortalMeta = \((?P<siteID>[^,]*),(?P<user>[^,]*),(?P<WGSessID>[^,]*),(?P<req>[^,]*),(?P<unknown>[^,]*)\)
EXTRACT-PortalRequestStart = Request received: (?P<RequestMethod>[A-Z]+) for (?P<RequestType>.*)
EXTRACT-PortalRequestEnd = Request completed: (?P<RequestType>[^ ]+) with status (?P<RequestOutcome>\d+)

[source::(?::){0}*logs[^_]tabadminagent*]
EXTRACT-StatusUpdate = Posting status update for (?P<AgentProcStatus>[^,]+)
EXTRACT-AgentDetailMsg = detail message: (?P<AgentDetail>.+)

[tts:pgsql]
EXTRACT-PostgresDuration = duration: (?P<PGSQLduration>[\d\.]+)

[tts:native]
EXTRACT-connectionFilename = filename='(?P<ConnectionFilename>[^']*)

[source::(?::){0}*workgroup.yml]
EXTRACT-workerID = ^worker_id:[\s]+(?P<workerID>.*$)

[tts:yaml]
EXTRACT-workgroupyml = ^(?P<config_key>[^ :=]+)( ?\=?:? ?)(?P<config_value>.+$)
